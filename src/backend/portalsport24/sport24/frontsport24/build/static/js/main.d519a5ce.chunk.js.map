{"version":3,"sources":["components/Button.js","hooks/usePost.js","components/LoginForm.js","shared/consts.js","App.js","reportWebVitals.js","index.js"],"names":["Button","type","txt","clickCallback","onClick","usePost","url","req","useState","postData","setPostData","err","setError","useCallback","a","fetch","method","headers","body","JSON","stringify","response","json","data","console","log","LoginForm","headerCallback","loginError","setLoginError","username","password","credentials","setCredentials","usernameError","setUsernameError","passwordError","setPasswordError","res","login","className","onSubmit","e","preventDefault","localStorage","setItem","token","position","placeholder","onChange","target","value","trim","LINKS","driver","name","link","accountant","ceo","mechanic","transportCoord","App","links","setLinks","setPosition","logged","setLogged","logoutCallback","removeItem","path","pos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d519a5ce.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Button = ({type, txt, clickCallback}) => {\r\n    return (\r\n        <button type={type} onClick={clickCallback}>\r\n            <div>\r\n            </div>\r\n            <p>{txt}</p> \r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import {useState, useCallback} from \"react\"\r\n//import {API_SERVER} from \"../shared/consts\"\r\n\r\nconst usePost = (url, req) => {\r\n    const API_SERVER = \"http://localhost:8000\";\r\n    const [postData, setPostData] = useState({});\r\n    const [err, setError] = useState(false);\r\n    const post = useCallback(async () => {\r\n            try {\r\n                const response = await fetch(`${API_SERVER}/${url}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(req)\r\n                });\r\n                const data = await response.json();\r\n                setPostData({...data});\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n                setError(true);\r\n            }\r\n    }, [url, req]);\r\n    return[postData, post, err]\r\n}\r\n\r\nexport default usePost;","import {useState} from 'react'\r\nimport Button from './Button'\r\nimport usePost from \"../hooks/usePost\"\r\nconst LoginForm = ({headerCallback}) => {\r\n\r\n    const [loginError, setLoginError] = useState(false);\r\n    const [credentials, setCredentials] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    })\r\n    const [usernameError, setUsernameError] = useState(false);    \r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [res, login, err] = usePost(\"login\", credentials);\r\n\r\n    function handleUsername(e) {\r\n        setCredentials({...credentials, username: e.target.value});\r\n        setUsernameError(e.target.value.trim() === \"\")\r\n    }\r\n    \r\n    function handlePassword(e) {\r\n        setCredentials({...credentials, password: e.target.value});\r\n        setPasswordError(e.target.value.trim() === \"\")\r\n    }\r\n\r\n    function handleLogin(e) {\r\n\r\n        e.preventDefault();\r\n        if (!usernameError && !passwordError) {\r\n            console.log(credentials);\r\n            login();\r\n            if (!err) {\r\n                localStorage.setItem(\"token\", res.token);\r\n                headerCallback(res.position)\r\n                setLoginError(false);\r\n            } else {\r\n                setLoginError(true);\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"login-form\" onSubmit={handleLogin}>\r\n            <div className=\"logo\"/>\r\n            {loginError && \r\n                <p>Błąd logowania</p>\r\n                }\r\n            <input type=\"text\" placeholder=\"Login\" onChange={handleUsername} value={credentials.username}/>\r\n            {usernameError && \r\n                <p>Proszę wpisać login</p>\r\n                }\r\n            <input type=\"password\" placeholder=\"Hasło\" onChange={handlePassword} value={credentials.password}/>\r\n            {passwordError && \r\n                <p>Proszę wpisać hasło</p>\r\n                }\r\n            <Button type=\"submit\" txt=\"Zaloguj\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm","const API_SERVER = \"http://localhost:8000\";\r\n\r\nconst LINKS = {\r\n    driver: [{\r\n      name: \"Podróż\",\r\n      link: \"/trip\"\r\n    }, {\r\n      name: \"Kursy\",\r\n      link: \"/courses\"\r\n    }],\r\n    accountant: [{\r\n      name: \"Raporty\",\r\n      link: \"/reports\"\r\n    }, {\r\n      name: \"Zarobki\",\r\n      link: \"/salaries\"\r\n    }],\r\n    ceo: [{\r\n      name: \"Pracownicy\",\r\n      link: \"/employees\"\r\n    }, {\r\n      name: \"Pojazdy\",\r\n      link: \"/vehicles\"\r\n    }],\r\n    mechanic: [{\r\n      name: \"Pojazdy\",\r\n      link: \"/vehicles\"\r\n    }, {\r\n      name: \"Naprawy\",\r\n      link: \"/repairs\"\r\n    }],\r\n    transportCoord: [{\r\n      name: \"Kursy\",\r\n      link: \"/course\"\r\n    }]\r\n  }\r\n  const BLANK_VEHICLE =\r\n  {\r\n      _id: \"\",\r\n      model: \"\",\r\n      brand: \"\",\r\n      capacity: 0,\r\n      repair: [],\r\n      year_production: 0,\r\n      registration_number: \"\",\r\n      engine_number: \"\",\r\n      engine_capacity: 0,\r\n      type: \"\",\r\n      available: false\r\n  }\r\nconst BLANK_REPAIR = {\r\n  _id: \"\",\r\n  description: null,\r\n  start_repair: \"\",\r\n  end_repair: null,\r\n  status: true,\r\n  number: 0\r\n}\r\n\r\nexport {API_SERVER, LINKS, BLANK_VEHICLE, BLANK_REPAIR};","import { useState, Header } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route, \r\n} from \"react-router-dom\";\r\nimport LoginForm from './components/LoginForm';\r\nimport {LINKS} from \"./shared/consts\"\r\n\r\nfunction App() {\r\n\r\n  const [links, setLinks] = useState([]);\r\n  const [position, setPosition] = useState(\"\");\r\n  const [logged, setLogged] = useState(false);\r\n  const handleLoginLogout = (pos) => {\r\n      setPosition(pos);\r\n        if (pos in LINKS) {\r\n            setLinks(LINKS[pos]);\r\n          } else {\r\n            setLinks([]);\r\n          }\r\n          setLogged(true);\r\n        }\r\n  const handleLogout = () => {\r\n          localStorage.removeItem(\"token\");\r\n          setLogged(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Header logged={logged} links={links} logoutCallback={handleLogout}  />\r\n        <Switch>\r\n            <Route path=\"/login\">\r\n              <LoginForm headerCallback={handleLoginLogout}/>\r\n            </Route>            \r\n            </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}