{"version":3,"sources":["components/Home.js","images/fb.png","images/insta.png","images/logo.png","components/MainPage.js","axios.js","components/AddDiscipline.js","components/SearchArticles.js","App.js","reportWebVitals.js","index.js"],"names":["Expo","d","Date","day","getDay","month","getMonth","date","getDate","year","getFullYear","className","React","Component","baseURL","axiosInstance","axios","create","timeout","headers","accept","interceptors","response","use","a","error","originalRequest","config","alert","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","localStorage","getItem","tokenParts","JSON","parse","atob","split","now","Math","ceil","console","log","exp","post","refresh","then","setItem","access","defaults","catch","err","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","useStyles","cardMedia","paddingTop","link","cardHeader","type","grey","postTitle","fontSize","textAlign","postText","justifyContent","marginBottom","Search","useState","search","posts","appState","setAppState","useEffect","get","res","allPosts","Fragment","Container","maxWidth","component","Grid","container","map","date_of_create","title","lead_text","appBar","borderBottom","divider","toolbarTitle","flexGrow","App","history","useHistory","setData","value","onChange","newValue","onRequestSearch","push","pathname","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAwBeA,MArBf,WAEG,IAAMC,EAAI,IAAIC,KAGPC,EAFU,CAAC,YAAa,oBAAgB,SAAU,aAAS,WAAY,cAAU,UAEnEF,EAAEG,UAChBC,EAFS,CAAC,WAAY,SAAU,QAAS,WAAY,OAAQ,UAAW,QAAS,WAAY,gBAAY,oBAAgB,YAAa,WAEvHJ,EAAEK,YACjBC,EAAON,EAAEO,UACTC,EAAOR,EAAES,cAEjB,OACC,mCACC,qBAAKC,UAAU,OAAf,SACM,qBAAKA,UAAU,OAAf,SACG,+BAAKR,EAAL,KAAYI,EAAZ,IAAmBF,EAAnB,IAA2BI,YCjBzB,MAA0B,+BCA1B,MAA0B,kCCA1B,MAA0B,iC,GCSlBG,IAAMC,U,6CCPvBC,EAAU,yBAEVC,E,OAAgBC,EAAMC,OAAO,CAClCH,QAASA,EACTI,QAAS,IACTC,QAAS,CACR,eAAgB,mBAChBC,OAAQ,sBAIVL,EAAcM,aAAaC,SAASC,KACnC,SAACD,GACA,OAAOA,IAFT,+BAAAE,EAAA,MAIC,WAAgBC,GAAhB,qBAAAD,EAAA,yDACOE,EAAkBD,EAAME,OAEA,qBAAnBF,EAAMH,SAHlB,uBAIEM,MACC,2HALH,kBASSC,QAAQC,OAAOL,IATxB,UAa4B,MAA1BA,EAAMH,SAASS,QACfL,EAAgBM,MAAQlB,EAAU,iBAdpC,uBAgBEmB,OAAOC,SAASC,KAAO,UAhBzB,kBAiBSN,QAAQC,OAAOL,IAjBxB,UAqB+B,oBAA7BA,EAAMH,SAASc,KAAKC,MACM,MAA1BZ,EAAMH,SAASS,QACe,iBAA9BN,EAAMH,SAASgB,WAvBjB,sBAyBQC,EAAeC,aAAaC,QAAQ,kBAzB5C,oBA4BSC,EAAaC,KAAKC,MAAMC,KAAKN,EAAaO,MAAM,KAAK,KAGrDC,EAAMC,KAAKC,KAAK/C,KAAK6C,MAAQ,KACnCG,QAAQC,IAAIT,EAAWU,OAEnBV,EAAWU,IAAML,GAlCxB,0CAmCWhC,EACLsC,KAAK,kBAAmB,CACxBC,QAASf,IAETgB,MAAK,SAACjC,GASN,OARAkB,aAAagB,QAAQ,eAAgBlC,EAASc,KAAKqB,QACnDjB,aAAagB,QAAQ,gBAAiBlC,EAASc,KAAKkB,SAEpDvC,EAAc2C,SAASvC,QAAvB,cACC,OAASG,EAASc,KAAKqB,OACxB/B,EAAgBP,QAAhB,cACC,OAASG,EAASc,KAAKqB,OAEjB1C,EAAcW,MAErBiC,OAAM,SAACC,GACPV,QAAQC,IAAIS,OAnDlB,QAsDIV,QAAQC,IAAI,2BAA4BT,EAAWU,IAAKL,GACxDd,OAAOC,SAASC,KAAO,UAvD3B,gCA0DGe,QAAQC,IAAI,gCACZlB,OAAOC,SAASC,KAAO,UA3D1B,iCAgEQN,QAAQC,OAAOL,IAhEvB,4CAJD,uDAwEeV,Q,mECtEG8C,aAAW,SAACC,GAAD,MAAY,CACxCC,MAAO,CACNC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEbC,OAAQ,CACPC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE1CC,KAAM,CACLC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE1BY,OAAQ,CACPP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QClB9B,IAAMa,EAAYjB,aAAW,SAACC,GAAD,MAAY,CACxCiB,UAAW,CACVC,WAAY,UAEbC,KAAM,CACLX,OAAQR,EAAMG,QAAQ,EAAG,MAE1BiB,WAAY,CACXX,gBACwB,UAAvBT,EAAMU,QAAQW,KACXrB,EAAMU,QAAQY,KAAK,KACnBtB,EAAMU,QAAQY,KAAK,MAExBC,UAAW,CACVC,SAAU,OACVC,UAAW,QAEZC,SAAU,CACTtB,QAAS,OACTuB,eAAgB,OAChBrB,WAAY,WACZkB,SAAU,OACVC,UAAW,OACXG,aAAc5B,EAAMG,QAAQ,QAoCf0B,EAhCA,WACEb,IAAhB,IAEA,EAAgCc,mBAAS,CACxCC,OAAQ,GACRC,MAAO,KAFR,mBAAOC,EAAP,KAAiBC,EAAjB,KAaA,OARAC,qBAAU,WACTlF,EAAcmF,IAAIL,UAAe5D,OAAOC,SAAS2D,QAAQtC,MAAK,SAAC4C,GAC9D,IAAMC,EAAWD,EAAI/D,KACrB4D,EAAY,CAAEF,MAAOM,IACrBlD,QAAQC,IAAIgD,EAAI/D,WAEf,CAAC4D,IAGH,cAAC,IAAMK,SAAP,UACC,cAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAU,OAAnC,SACC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACzC,QAAS,EAAGG,WAAW,WAAvC,SACE2B,EAASD,MAAMa,KAAI,SAACtD,GACpB,OACsB,sBAAK1C,UAAY,QAAjB,UACK0C,EAAKuD,eADV,IAC2BvD,EAAKwD,MADhC,IACwCxD,EAAKyD,uB,kBCrDnEhC,EAAYjB,aAAW,SAACC,GAAD,MAAY,CACxCiD,OAAQ,CACPC,aAAa,aAAD,OAAelD,EAAMU,QAAQyC,UAE1ChC,KAAM,CACLX,OAAQR,EAAMG,QAAQ,EAAG,MAE1BiD,aAAc,CACbC,SAAU,OA6BGC,MAxBf,WACkBtC,IAAhB,IACGuC,EAAUC,cACd,EAAwB1B,mBAAS,CAAEC,OAAQ,KAA3C,mBAAOzD,EAAP,KAAamF,EAAb,KAUG,OACE,qBAAK5G,UAAU,MAAf,SACE,cAAC,IAAD,CACF6G,MAAOpF,EAAKyD,OACZ4B,SAAU,SAACC,GAAD,OAAcH,EAAQ,CAAE1B,OAAQ6B,KAC1CC,gBAAiB,kBAAevF,EAAKyD,OAZzCwB,EAAQO,KAAK,CACZC,SAAU,WACVhC,OAAQ,WAAazD,EAAKyD,cAE3B5D,OAAOC,SAAS4F,eCrBHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1E,MAAK,YAAkD,IAA/C2E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACA,cAAC,EAAD,IACA,cAAC,EAAD,SAGFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.3559017b.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../style.css';\r\n\r\nfunction Expo() {\r\n\r\n   const d = new Date()\r\n    const weekDay = ['niedziela', 'poniedziałek', 'wtorek', 'środa', 'czwartek', 'piątek', 'sobota'];\r\n    const months = ['stycznia', 'lutego', 'marca', 'kwietnia', 'maja', 'czerwca', 'lipca', 'sierpnia', 'września', 'października', 'listopada', 'grudnia']\r\n    const day = weekDay[d.getDay()]\r\n    const month = months[d.getMonth()]\r\n    const date = d.getDate()\r\n    const year = d.getFullYear()\r\n\r\n  return (\r\n  \t<>\r\n    <div className=\"main\">\r\n          <div className=\"date\">        \r\n             <h1>{day}, {date} {month} {year}</h1>\r\n          </div>\r\n     </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default Expo;","export default __webpack_public_path__ + \"static/media/fb.e88109b0.png\";","export default __webpack_public_path__ + \"static/media/insta.4fae33bb.png\";","export default __webpack_public_path__ + \"static/media/logo.62188fec.png\";","import React from 'react';\r\nimport Expo from './Home';\r\nimport '../style.css'\r\nimport fb from '../images/fb.png'\r\nimport insta from '../images/insta.png'\r\nimport twit from '../images/twit.png'\r\nimport logo from '../images/logo.png'\r\nimport { mergeClasses } from '@material-ui/styles';\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newestMatches: [],\r\n      newestArticles: [],\r\n      newestArticle: [],\r\n      sections: [],\r\n      quote: []\r\n    }\r\n    this.fetchTasks = this.fetchTasks.bind(this)\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.fetchTasks()\r\n  }\r\n\r\n  fetchTasks() {\r\n    console.log(\"Fetching...\")\r\n\r\n    fetch('http://127.0.0.1:8000/newest_matches')\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          newestMatches: data\r\n        })\r\n      )\r\n\r\n      fetch('http://127.0.0.1:8000/newest_article')\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          newestArticle: data\r\n        })\r\n      )\r\n\r\n      fetch('http://127.0.0.1:8000/section')\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n            sections: data\r\n          })\r\n      )\r\n      \r\n\r\n      fetch('http://127.0.0.1:8000/newest_articles')\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          newestArticles: data\r\n        })\r\n      )\r\n    \r\n      fetch('http://127.0.0.1:8000/quote')\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          quote: data\r\n        })\r\n      )\r\n  }\r\n\r\n  render() {\r\n    var matches = this.state.newestMatches\r\n    var newArticles = this.state.newestArticles\r\n    var section = this.state.sections\r\n    var newArticle = this.state.newestArticle\r\n    var q = this.state.quote\r\n    var newArticleUrl = 'http://localhost:8000' + newArticle.big_title_photo\r\n    console.log(newArticleUrl)\r\n    return (\r\n      <div className=\"div\">\r\n        <img className=\"logo\" src={logo} alt=\"logo\" />\r\n        <Expo />\r\n        <div class=\"fb\">\r\n        <a href=\"https://facebook.com\">\r\n          <img className=\"fbImg\" src={fb} alt=\"fb\" />\r\n        </a>\r\n        </div>\r\n        <a href=\"https://twitter.com\">\r\n          <img className=\"twImg\" src={twit} alt=\"twit\" />\r\n        </a>\r\n        <a href=\"https://instagram.com\">\r\n          <img className=\"insImg\" src={insta} alt=\"insta\" />\r\n        </a>\r\n        <button className=\"registerButton\">Zarejestruj się</button>\r\n        <button className=\"loginButton\">Zaloguj się</button>\r\n        <button className=\"scoresButton\">WYNIKI</button>\r\n        <div className=\"newestMatches\">\r\n          {matches.map(function (task, index) {\r\n            return (\r\n              <div key={index}>\r\n                <b className=\"matchdate\">{task.match_date}</b><br/>\r\n                <b className=\"team\">{task.host}</b>&emsp;<b className=\"score\">{task.host_score}</b><br/>\r\n                <b className=\"team\">{task.guest}</b>&emsp;<b className=\"score\">{task.guest_score}</b><br/>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n        <div className=\"newArticle\">\r\n                <img className=\"mainImg\" src={newArticleUrl} alt=\"main_img\"/>\r\n                <p className=\"mainTitle\">{newArticle.title}</p>\r\n        </div>\r\n        <div className=\"sections\">\r\n          {section.map(function (sct, index) {\r\n            var url = 'http://localhost:8000' + sct.icon\r\n            console.log(url)\r\n            return (\r\n              <div key={index} className=\"sec\">\r\n                <img className = \"sec_img\" src={url} alt=\"section_img\"/><div className=\"sec_name\">{sct.name}</div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n        <h1 className=\"newestNews\">Najnowsze</h1>\r\n        <div className=\"newestArticles\">\r\n          {newArticles.map(function (article, index) {\r\n            return (\r\n              <div key={index}>\r\n                <b className=\"articleDate\">{article.date_of_create}</b>&ensp;<b className=\"articleTitle\">{article.title}</b>\r\n                <p>&nbsp;</p>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n        <div className=\"quote\">\r\n            <p className=\"q\">{q.quote}</p><br/><br/>\r\n            <div className=\"des\">{q.description}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;","import axios from 'axios';\r\n\r\nconst baseURL = 'http://127.0.0.1:8000/';\r\n\r\nconst axiosInstance = axios.create({\r\n\tbaseURL: baseURL,\r\n\ttimeout: 5000,\r\n\theaders: {\r\n\t\t'Content-Type': 'application/json',\r\n\t\taccept: 'application/json',\r\n\t},\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n\t(response) => {\r\n\t\treturn response;\r\n\t},\r\n\tasync function (error) {\r\n\t\tconst originalRequest = error.config;\r\n\r\n\t\tif (typeof error.response === 'undefined') {\r\n\t\t\talert(\r\n\t\t\t\t'A server/network error occurred. ' +\r\n\t\t\t\t'Looks like CORS might be the problem. ' +\r\n\t\t\t\t'Sorry about this - we will get it fixed shortly.'\r\n\t\t\t);\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\terror.response.status === 401 &&\r\n\t\t\toriginalRequest.url === baseURL + 'token/refresh/'\r\n\t\t) {\r\n\t\t\twindow.location.href = '/login/';\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\terror.response.data.code === 'token_not_valid' &&\r\n\t\t\terror.response.status === 401 &&\r\n\t\t\terror.response.statusText === 'Unauthorized'\r\n\t\t) {\r\n\t\t\tconst refreshToken = localStorage.getItem('refresh_token');\r\n\r\n\t\t\tif (refreshToken) {\r\n\t\t\t\tconst tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n\r\n\t\t\t\t// exp date in token is expressed in seconds, while now() returns milliseconds:\r\n\t\t\t\tconst now = Math.ceil(Date.now() / 1000);\r\n\t\t\t\tconsole.log(tokenParts.exp);\r\n\r\n\t\t\t\tif (tokenParts.exp > now) {\r\n\t\t\t\t\treturn axiosInstance\r\n\t\t\t\t\t\t.post('/token/refresh/', {\r\n\t\t\t\t\t\t\trefresh: refreshToken\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\tlocalStorage.setItem('access_token', response.data.access);\r\n\t\t\t\t\t\t\tlocalStorage.setItem('refresh_token', response.data.refresh);\r\n\r\n\t\t\t\t\t\t\taxiosInstance.defaults.headers['Authorization'] =\r\n\t\t\t\t\t\t\t\t'JWT ' + response.data.access;\r\n\t\t\t\t\t\t\toriginalRequest.headers['Authorization'] =\r\n\t\t\t\t\t\t\t\t'JWT ' + response.data.access;\r\n\r\n\t\t\t\t\t\t\treturn axiosInstance(originalRequest);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Refresh token is expired', tokenParts.exp, now);\r\n\t\t\t\t\twindow.location.href = '/login/';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Refresh token not available.');\r\n\t\t\t\twindow.location.href = '/login/';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// specific error handling done elsewhere\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n\r\nexport default axiosInstance;","import React, { useState } from 'react';\r\nimport axiosInstance from '../axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n//MaterialUI\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport logo from '../images/logo.png'\r\nimport '../style.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%', // Fix IE 11 issue.\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t},\r\n}));\r\n\r\nexport default function Create() {\r\n\tfunction slugify(string) {\r\n\t\tconst a =\r\n\t\t\t'àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;';\r\n\t\tconst b =\r\n\t\t\t'aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------';\r\n\t\tconst p = new RegExp(a.split('').join('|'), 'g');\r\n\r\n\t\treturn string\r\n\t\t\t.toString()\r\n\t\t\t.toLowerCase()\r\n\t\t\t.replace(/\\s+/g, '-') // Replace spaces with -\r\n\t\t\t.replace(p, (c) => b.charAt(a.indexOf(c))) // Replace special characters\r\n\t\t\t.replace(/&/g, '-and-') // Replace & with 'and'\r\n\t\t\t.replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\r\n\t\t\t.replace(/\\-\\-+/g, '-') // Replace multiple - with single -\r\n\t\t\t.replace(/^-+/, '') // Trim - from start of text\r\n\t\t\t.replace(/-+$/, ''); // Trim - from end of text\r\n\t}\r\n\r\n\tconst history = useHistory();\r\n\tconst initialFormData = Object.freeze({\r\n\t\tname: '',\r\n\t});\r\n\r\n\tconst [postData, updateFormData] = useState(initialFormData);\r\n    const [postImage, setPostImage] = useState(null);\r\n\r\n\tconst handleChange = (e) => {\r\n        if ([[e.target.name] == 'image']){\r\n            setPostImage({\r\n                image: e.target.files,\r\n            });\r\n            console.log(e.target.files);\r\n        }\r\n\t\tif ([e.target.name] == 'name') {\r\n\t\t\tupdateFormData({\r\n\t\t\t\t...postData,\r\n\t\t\t\t// Trimming any whitespace\r\n\t\t\t\t[e.target.name]: e.target.value.trim(),\r\n\t\t\t\t//['slug']: slugify(e.target.value.trim()),\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tupdateFormData({\r\n\t\t\t\t...postData,\r\n\t\t\t\t// Trimming any whitespace\r\n\t\t\t\t[e.target.name]: e.target.value.trim(),\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n    // const config = {headers: {'Content-Type': 'multipart/form-data'}};\r\n    // const URL = 'http://127.0.0.1:8000/add_discipline/';\r\n    // let formData = new FormData();\r\n    // formData.append('name', postData.name);\r\n    // formData.append('icon', postImage.image[0]);\r\n    // axios\r\n    //     .post(URL,formData,config)\r\n    //     .then((res) => {\r\n    //     console.log(res.data);\r\n    //     })\r\n    //     .catch((err) => console.log(err));\r\n    \r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n        let formData = new FormData();\r\n        formData.append('name', postData.name);\r\n        formData.append('icon', postImage.image[0]);\r\n\t\taxiosInstance.post(`add_discipline/`, formData);\r\n\t    //window.location.reload(false);\r\n\t};\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t<CssBaseline />\r\n\t\t\t<div className={classes.paper}>\r\n            <img className=\"logo\" src={logo} alt=\"logo\" />\r\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t\tUtwórz dyscyplinę\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<form className={classes.form} noValidate>\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\tlabel=\"Nazwa\"\r\n\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"name\"\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n                        <input\r\n                        accept='image/*'\r\n                        className={classes.input}\r\n                        id=\"post-image\"\r\n                        onChange={handleChange}\r\n                        name=\"image\"\r\n                        type=\"file\"\r\n                        />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tUtwórz dyscyplinę\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axiosInstance from '../axios';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcardMedia: {\r\n\t\tpaddingTop: '56.25%', // 16:9\r\n\t},\r\n\tlink: {\r\n\t\tmargin: theme.spacing(1, 1.5),\r\n\t},\r\n\tcardHeader: {\r\n\t\tbackgroundColor:\r\n\t\t\ttheme.palette.type === 'light'\r\n\t\t\t\t? theme.palette.grey[200]\r\n\t\t\t\t: theme.palette.grey[700],\r\n\t},\r\n\tpostTitle: {\r\n\t\tfontSize: '16px',\r\n\t\ttextAlign: 'left',\r\n\t},\r\n\tpostText: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'left',\r\n\t\talignItems: 'baseline',\r\n\t\tfontSize: '12px',\r\n\t\ttextAlign: 'left',\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n}));\r\n\r\nconst Search = () => {\r\n\tconst classes = useStyles();\r\n\tconst search = 'search';\r\n\tconst [appState, setAppState] = useState({\r\n\t\tsearch: '',\r\n\t\tposts: [],\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\taxiosInstance.get(search + '/' + window.location.search).then((res) => {\r\n\t\t\tconst allPosts = res.data;\r\n\t\t\tsetAppState({ posts: allPosts });\r\n\t\t\tconsole.log(res.data);\r\n\t\t});\r\n\t}, [setAppState]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Container maxWidth=\"md\" component=\"main\">\r\n\t\t\t\t<Grid container spacing={5} alignItems=\"flex-end\">\r\n\t\t\t\t\t{appState.posts.map((post) => {\r\n\t\t\t\t\t\treturn (\r\n                            <div className = \"found\">\r\n                                {post.date_of_create} {post.title} {post.lead_text}\r\n                            </div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\nexport default Search;","import React, {useState} from 'react';\r\nimport './style.css'\r\nimport MainPage from './components/MainPage';\r\nimport Create from './components/AddDiscipline';\r\nimport Search from './components/SearchArticles';\r\nimport SearchBar from 'material-ui-search-bar';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tappBar: {\r\n\t\tborderBottom: `1px solid ${theme.palette.divider}`,\r\n\t},\r\n\tlink: {\r\n\t\tmargin: theme.spacing(1, 1.5),\r\n\t},\r\n\ttoolbarTitle: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n}));\r\n\r\n\r\nfunction App () {\r\n  const classes = useStyles();\r\n\tlet history = useHistory();\r\n\tconst [data, setData] = useState({ search: '' });\r\n\r\n\tconst goSearch = (e) => {\r\n\t\thistory.push({\r\n\t\t\tpathname: '/search/',\r\n\t\t\tsearch: '?search=' + data.search,\r\n\t\t});\r\n\t\twindow.location.reload();\r\n\t};\r\n\r\n    return (\r\n      <div className=\"div\">\r\n        <SearchBar\r\n\t\t\t\t\t\tvalue={data.search}\r\n\t\t\t\t\t\tonChange={(newValue) => setData({ search: newValue })}\r\n\t\t\t\t\t\tonRequestSearch={() => goSearch(data.search)}\r\n\t\t\t\t\t/>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Search from './components/SearchArticles';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n    <App />\r\n    <Search/>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}